// Copyright (c) 2012-2019 Wojciech Figat. All rights reserved.
// This code was generated by a tool. Changes to this file may cause
// incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Runtime.CompilerServices;

namespace FlaxEngine
{
    /// <summary>
    /// The navigation service used for path finding and agents navigation system.
    /// </summary>
    public static partial class Navigation
    {
        /// <summary>
        /// Returns true if navigation system is during navmesh building (any request is valid or async task active).
        /// </summary>
        [UnmanagedCall]
        public static bool IsBuildingNavMesh
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_IsBuildingNavMesh(); }
#endif
        }

        /// <summary>
        /// Gets the navmesh building progress (normalized to range 0-1).
        /// </summary>
        [UnmanagedCall]
        public static float NavMeshBuildingProgress
        {
#if UNIT_TEST_COMPILANT
            get; set;
#else
            get { return Internal_GetNavMeshBuildingProgress(); }
#endif
        }

        /// <summary>
        /// Finds the distance from the specified start position to the nearest polygon wall.
        /// </summary>
        /// <param name="startPosition">The start position.</param>
        /// <param name="hitInfo">The result hit information. Valid only when query succeed.</param>
        /// <param name="maxDistance">The maximum distance to search for wall (search radius).</param>
        /// <returns>True if ray hits an matching object, otherwise false.</returns>
#if UNIT_TEST_COMPILANT
        [Obsolete("Unit tests, don't support methods calls.")]
#endif
        [UnmanagedCall]
        public static bool FindDistanceToWall(Vector3 startPosition, out NavMeshHit hitInfo, float maxDistance = float.MaxValue)
        {
#if UNIT_TEST_COMPILANT
            throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
            return Internal_FindDistanceToWall(ref startPosition, out hitInfo, maxDistance);
#endif
        }

        #region Internal Calls

#if !UNIT_TEST_COMPILANT
        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern bool Internal_IsBuildingNavMesh();

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern float Internal_GetNavMeshBuildingProgress();

        [MethodImpl(MethodImplOptions.InternalCall)]
        internal static extern bool Internal_FindDistanceToWall(ref Vector3 startPosition, out NavMeshHit hitInfo, float maxDistance);
#endif

        #endregion
    }
}
