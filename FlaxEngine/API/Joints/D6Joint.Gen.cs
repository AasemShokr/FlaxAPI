////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2012-2017 Flax Engine. All rights reserved.
////////////////////////////////////////////////////////////////////////////////////
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Runtime.CompilerServices;

namespace FlaxEngine
{
	/// <summary>
	/// Physics joint that is the most customizable type of joint. This joint type can be used to create all other built-in joint types, and to design your own custom ones, but is less intuitive to use.Allows a specification of a linear constraint(for example for slider), twist constraint(rotating around X) and swing constraint(rotating around Y and Z). It also allows you to constrain limits to only specific axes or completely lock specific axes.
	/// </summary>
	[Serializable]
	public sealed partial class D6Joint : Joint
	{
		/// <summary>
		/// Creates new <see cref="D6Joint"/> object.
		/// </summary>
		private D6Joint() : base()
		{
		}

		/// <summary>
		/// Creates new instance of <see cref="D6Joint"/> object.
		/// </summary>
		/// <returns>Created object.</returns>
#if UNIT_TEST_COMPILANT
		[Obsolete("Unit tests, don't support methods calls.")]
#endif
		[UnmanagedCall]
		public static D6Joint New() 
		{
#if UNIT_TEST_COMPILANT
			throw new NotImplementedException("Unit tests, don't support methods calls. Only properties can be get or set.");
#else
			return Internal_Create(typeof(D6Joint)) as D6Joint;
#endif
		}

#region Internal Calls
#if !UNIT_TEST_COMPILANT
#endif
#endregion
	}
}

